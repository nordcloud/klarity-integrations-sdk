/*
Klarity Integrations

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integrations

import (
	"encoding/json"
)

// EstateRecordsRequestBody struct for EstateRecordsRequestBody
type EstateRecordsRequestBody struct {
	Records *[]EstateRecordsRequestBodyRecords `json:"records,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EstateRecordsRequestBody EstateRecordsRequestBody

// NewEstateRecordsRequestBody instantiates a new EstateRecordsRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEstateRecordsRequestBody() *EstateRecordsRequestBody {
	this := EstateRecordsRequestBody{}
	return &this
}

// NewEstateRecordsRequestBodyWithDefaults instantiates a new EstateRecordsRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEstateRecordsRequestBodyWithDefaults() *EstateRecordsRequestBody {
	this := EstateRecordsRequestBody{}
	return &this
}

// GetRecords returns the Records field value if set, zero value otherwise.
func (o *EstateRecordsRequestBody) GetRecords() []EstateRecordsRequestBodyRecords {
	if o == nil || o.Records == nil {
		var ret []EstateRecordsRequestBodyRecords
		return ret
	}
	return *o.Records
}

// GetRecordsOk returns a tuple with the Records field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstateRecordsRequestBody) GetRecordsOk() (*[]EstateRecordsRequestBodyRecords, bool) {
	if o == nil || o.Records == nil {
		return nil, false
	}
	return o.Records, true
}

// HasRecords returns a boolean if a field has been set.
func (o *EstateRecordsRequestBody) HasRecords() bool {
	if o != nil && o.Records != nil {
		return true
	}

	return false
}

// SetRecords gets a reference to the given []EstateRecordsRequestBodyRecords and assigns it to the Records field.
func (o *EstateRecordsRequestBody) SetRecords(v []EstateRecordsRequestBodyRecords) {
	o.Records = &v
}

func (o EstateRecordsRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Records != nil {
		toSerialize["records"] = o.Records
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *EstateRecordsRequestBody) UnmarshalJSON(bytes []byte) (err error) {
	varEstateRecordsRequestBody := _EstateRecordsRequestBody{}

	if err = json.Unmarshal(bytes, &varEstateRecordsRequestBody); err == nil {
		*o = EstateRecordsRequestBody(varEstateRecordsRequestBody)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "records")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEstateRecordsRequestBody struct {
	value *EstateRecordsRequestBody
	isSet bool
}

func (v NullableEstateRecordsRequestBody) Get() *EstateRecordsRequestBody {
	return v.value
}

func (v *NullableEstateRecordsRequestBody) Set(val *EstateRecordsRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableEstateRecordsRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableEstateRecordsRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEstateRecordsRequestBody(val *EstateRecordsRequestBody) *NullableEstateRecordsRequestBody {
	return &NullableEstateRecordsRequestBody{value: val, isSet: true}
}

func (v NullableEstateRecordsRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEstateRecordsRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



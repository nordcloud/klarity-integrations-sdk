"""
    Klarity Integrations

    REST API for managing Estate Records using Klarity Integrations. You can enrich your estate by creating new kinds of estate records or extending existing ones. Before making use of the API, you must first register your External Integration in Klarity, which provides you with the required authentication credentials. Then, you use those credentials to obtain a Token that allows you to make authorized calls to Klarityâ€™s REST API for External Integration.  # noqa: E501

    The version of the OpenAPI document: 0.0.4
    Contact: products@nordcloud.com
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import klarity_integrations
from klarity_integrations.model.costs import Costs
from klarity_integrations.model.id import Id
from klarity_integrations.model.name import Name
from klarity_integrations.model.tags import Tags
from klarity_integrations.model.type import Type
from klarity_integrations.model.valid_through import ValidThrough
globals()['Costs'] = Costs
globals()['Id'] = Id
globals()['Name'] = Name
globals()['Tags'] = Tags
globals()['Type'] = Type
globals()['ValidThrough'] = ValidThrough
from klarity_integrations.model.estate_records_request_body_records import EstateRecordsRequestBodyRecords


class TestEstateRecordsRequestBodyRecords(unittest.TestCase):
    """EstateRecordsRequestBodyRecords unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testEstateRecordsRequestBodyRecords(self):
        """Test EstateRecordsRequestBodyRecords"""
        # FIXME: construct object with mandatory attributes with example values
        # model = EstateRecordsRequestBodyRecords()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
